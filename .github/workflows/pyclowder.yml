name: pyclowder

# This will check to see if there is a new version of pyclowder and
# automatically create a pull request.
on:
  push:
    branches:
      - master

  schedule:
    - cron: '0 0 * * *'

# Certain actions will only run when this is the master repo.
env:
  MASTER_REPO: clowder-framework/extractors-clamav

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # calculate some variables that are used later
      - name: pyclowder upgrade
        run: |
          pyclowder=$(curl -s https://pypi.org/pypi/pyclowder/json | jq -r .info.version)
          echo "::set-env name=PYCLOWDER::${pyclowder}"

          if [ "$(awk -F '==' '/^pyclowder/ { print $2 }' ./requirements.txt)" != "${pyclowder}" ]; then
            echo "Updating pyclowder to ${pyclowder}"

            # update pyclowder
            sed -i~ "s/^pyclowder==.*/pyclowder==$pyclowder/" ./requirements.txt

            # get extractor version
            extractor=$(jq -r .version ./extractor_info.json)

            # uodate version number
            newextractor="${extractor%.*}.$(( ${VERSION##*.} + 1 ))"
            echo "Extractor is now ${newextractor}"

            # update extractor_info.json
            jq ".version=\"${newextractor}\"" ./extractor_info.json > tmpfile
            mv tmpfile ./extractor_info.json
          fi

      # this will update the README of the dockerhub repo
      - name: create PR if needed
        if: github.repository == env.MASTER_REPO
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: "Updated pyclowder to ${{ env.PYCLOWDER }}"
          title: "Updated pyclowder to ${{ env.PYCLOWDER }}"
